# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["blog_staging"]

  # Allows manual trigger from the Actions tab
  workflow_dispatch:

# Set permissions for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.114.0
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Install Dart Sass
        run: sudo snap install dart-sass

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Install Node.js dependencies (if needed)
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo --minify --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Debug - Check Hugo Build Output
        run: ls -lah ./public || echo "❌ Hugo output directory is missing!"

      - name: Ensure Hugo Output Exists
        run: |
          if [ ! -d "./public" ] || [ -z "$(ls -A ./public)" ]; then
            echo "❌ Hugo did not generate the public directory or it's empty."
            exit 1
          fi

      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: ./public

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: ./public

      - name: Debug - List Downloaded Files
        run: ls -lah ./public || echo "❌ Artifact directory is missing!"

      - name: Ensure Artifact Exists Before Deployment
        run: |
          if [ ! -d "./public" ] || [ -z "$(ls -A ./public)" ]; then
            echo "❌ No artifact files found for deployment."
            exit 1
          fi

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2